import asyncio
import threading
import time
import serial

class ArduinoSerial:
    def __init__(self, port: str, baud: int = 9600, timeout: float = 1.0):
        self.ser = serial.Serial(port, baud, timeout=timeout)
        time.sleep(2)
        
        self.voltage = 0.0
        self.current = 0.0
        self.coinCount = 0

    async def startSerial(self):
        asyncio.create_task(self._readRawSerial())

    async def _readRawSerial(self):
        while True:
            if (self.ser.in_waiting > 0):
                read = self.ser.readline().decode('utf-8').strip()
                # print(f"Serial raw value: {read}")
                values = read.split(',')
                # print(f"Separated value: {values}")

                self.voltage = values[0]
                self.current = values[1]
                self.coinCount += int(values[2])

            await asyncio.sleep(0.01)

    def resetCoinCount(self):
        self.coinCount = 0